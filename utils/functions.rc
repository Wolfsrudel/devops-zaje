#!/bin/sh 

# protect against sourcing if zaje cannot be found.

if which zaje > /dev/null 2>&1 ;then

    # An example for how you can wrap common utils so that their output is filtered through zaje.

    # Usage:

    # - Adjust this so it points to the lexers dir
    # export ZAJE_SYNDIR=/path/to/syntax_files

    # - Source this in your shell by running " . /path/to/functions.rc". 
    # You can of course add this to ~/.bashrc or any other file sourced by your shell.
    # Any Bourne comptable shell will work, BASH is not a requirement.

    # - Invoke `tail` and `diff` as you normally would. You should get highlighted output:) 

    alias cat=zaje

    tail()
    {
	# uncomment this to apply it to only specific types of files
	#FILE=$(echo "$@" | awk -F " " '{print $NF}')

	#if echo $FILE | grep -q nginx || echo $FILE | grep -q apache;then
	#fi

	if [ $1 == "-f" ];then
	    $(which tail) "$@" | zaje -l server-log -
	else
	    $(which tail) "$@" | zaje -l server-log
	fi
    }

    diff()
    {
	$(which diff) "$@" | zaje -l diff
    }

    lsb_release()
    {
	$(which lsb_release) "$@" | zaje -l yaml
    }

    ping()
    {
	$(which ping) "$@" | zaje -l ping -
    }

    df()
    {
	$(which df) "$@" | zaje -l df 
    }

    du()
    {
	$(which du) "$@" | zaje -l du 
    }

else
    echo "Couldn't find zaje. Exiting without sourcing functions"
fi

